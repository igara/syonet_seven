upstream websocket {
    server www:9000;
}

server {
    listen 80;
    server_name syonet.work;
    server_tokens off;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    server_name syonet.work;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/syonet.work/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/syonet.work/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE+RSAGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!aNULL!eNull:!EXPORT:!DES:!3DES:!MD5:!DSS;
    client_max_body_size 64M;
    charset UTF-8;
    charset_types text/css;

    location / {
        proxy_pass  http://www:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ssb/ {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
