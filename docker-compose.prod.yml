version: "3"

services:
  www:
    shm_size: 256m
    build:
      context: ./nodejs/www
      dockerfile: www.Dockerfile
    ports:
      - 3000:3000
      - 9000:9000
      - 9001:9001
    volumes:
      - ./nodejs/www:/www:cached
      - /var/run/docker.sock:/var/run/docker.sock:cached
    environment:
      WWW_DOMAIN: ${WWW_DOMAIN}
      TZ: Asia/Tokyo
    links:
      - mongodb
    networks:
      - frontend
      - backend
    extra_hosts:
      - "syonet.work:172.19.0.5"
    restart: always

  mongodb:
    image: mongo:latest
    command: mongod
    volumes:
      - ./data/mongo:/data/db:cached
    networks:
      - frontend
      - backend
    environment:
      TZ: Asia/Tokyo
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    links:
      - www:www
    ports:
      - "80:80"
      - "443:443"
    environment:
      NODE_ENV: ${NODE_ENV}
      WWW_DOMAIN: ${WWW_DOMAIN}
    networks:
      - frontend
      - backend
    restart: always

  coturn:
    image: instrumentisto/coturn
    command:
      - -c=/etc/coturn/turnserver.conf
      - --log-file=stdout
      - --external-ip=0.0.0.0/$$(detect-external-ip)
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf:ro
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
    networks:
      - frontend
      - backend
    restart: always

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
