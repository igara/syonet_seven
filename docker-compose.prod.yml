version: "3"

services:
  www:
    shm_size: 256m
    build:
      context: ./nodejs/www
      dockerfile: www.Dockerfile
    ports:
      - 3000:3000
      - 9000:9000
    volumes:
      - ./nodejs/www:/www:cached
      - /var/run/docker.sock:/var/run/docker.sock:cached
    environment:
      WWW_DOMAIN: ${WWW_DOMAIN}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
      PYTHON: python3
      # NPM_INSTALL: 1
    links:
      - mysql
    restart: always

  mysql:
    image: mysql:8
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
    volumes:
      - ./data/mysql:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  nginx:
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    links:
      - www:www
    ports:
      - "80:80"
      - "443:443"
    environment:
      NODE_ENV: ${NODE_ENV}
      WWW_DOMAIN: ${WWW_DOMAIN}
    networks:
      default:
        aliases:
          - syonet.work
    restart: always
