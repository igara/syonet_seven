version: "3"

services:
  www:
    build:
      context: ./nodejs/www
      dockerfile: www.Dockerfile
    command: npm run production
    ports:
      - 3000:3000
      - 9000:9000
    volumes:
      - ./nodejs/www:/www:cached
      - /var/run/docker.sock:/var/run/docker.sock:cached
    environment:
      TZ: Asia/Tokyo
    links:
      - mongodb
    networks:
      - frontend
      - backend
    restart: always

  mongodb:
    image: mongo:4
    ports:
      - 27017:27017
    command: mongod
    volumes:
      - ./data/mongo:/data/db:cached
    networks:
      - frontend
      - backend
    environment:
      TZ: Asia/Tokyo
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    links:
      - www:www
    ports:
      - "80:80"
      - "443:443"
    environment:
      NODE_ENV: ${NODE_ENV}
      WWW_DOMAIN: ${WWW_DOMAIN}
    networks:
      - frontend
      - backend
    restart: always

  discord:
    build:
      context: ./nodejs/discord
      dockerfile: discord.Dockerfile
    command: npm run start
    volumes:
      - ./nodejs/discord:/discord:cached
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_ADMIN_USER_ID: ${DISCORD_ADMIN_USER_ID}
      DISCORD_BOT_CHANNEL_ID: ${DISCORD_BOT_CHANNEL_ID}
      REMOTE_DEPLOY_COMMAND: ${REMOTE_DEPLOY_COMMAND}
      DISCORD_WEBHOCK: ${DISCORD_WEBHOCK}
      IN_POM_PATH: ${IN_POM_PATH}
      OUT_POM_PATH: ${OUT_POM_PATH}
      WEBPUSH_CONTACT: ${WEBPUSH_CONTACT}
      WEBPUSH_VAPIDKEYS_PUBLIC: ${WEBPUSH_VAPIDKEYS_PUBLIC}
      WEBPUSH_VAPIDKEYS_PRIVATE: ${WEBPUSH_VAPIDKEYS_PRIVATE}
      WWW_DOMAIN: ${WWW_DOMAIN}

    restart: always
    links:
      - mongodb
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
