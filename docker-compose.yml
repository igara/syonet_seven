version: "3"

services:
  www:
    shm_size: 256m
    build:
      context: ./nodejs/www
      dockerfile: www.Dockerfile
    ports:
      - 3000:3000
      - 9229:9229
      - 9000:9000
    volumes:
      - ./nodejs/www:/www:cached
      - /var/run/docker.sock:/var/run/docker.sock:cached
    environment:
      WWW_DOMAIN: ${WWW_DOMAIN}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
      PYTHON: python3
      # NPM_INSTALL: 1
    links:
      - mysql
      - elasticsearch

  mysql:
    image: mysql:8
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Tokyo
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - xpack.security.enabled=false
      - http.host=0.0.0.0
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-methods=*
      - http.cors.allow-headers=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  nginx:
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    volumes:
      - ./nginx:/nginx:cached
      - ./nginx/localhost:/etc/nginx/conf.d
      - ./data/openssl:/var/www/openssl
    links:
      - www:www
    ports:
      - "80:80"
      - "443:443"
    environment:
      NODE_ENV: ${NODE_ENV}
      WWW_DOMAIN: ${WWW_DOMAIN}
