version: "3"

services:
  www:
    build:
      context: ./nodejs/www
      dockerfile: www.Dockerfile
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - ./nodejs/www:/www:cached
      - /var/run/docker.sock:/var/run/docker.sock:cached
    environment:
      WWW_ENV: ${WWW_ENV}
      WWW_DOMAIN: ${WWW_DOMAIN}
      DB_DOMAIN: ${DB_DOMAIN}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK: ${GOOGLE_CALLBACK}
      GOOGLE_SERVICE_CLIENT_EMAIL: ${GOOGLE_SERVICE_CLIENT_EMAIL}
      GOOGLE_SERVICE_PRIVATE_KEY: ${GOOGLE_SERVICE_PRIVATE_KEY}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      FACEBOOK_CALLBACK: ${FACEBOOK_CALLBACK}
      TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
      TWITTER_CALLBACK: ${TWITTER_CALLBACK}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK: ${GITHUB_CALLBACK}
      WEBPUSH_CONTACT: ${WEBPUSH_CONTACT}
      WEBPUSH_VAPIDKEYS_PUBLIC: ${WEBPUSH_VAPIDKEYS_PUBLIC}
      WEBPUSH_VAPIDKEYS_PRIVATE: ${WEBPUSH_VAPIDKEYS_PRIVATE}
      TZ: Asia/Tokyo
    links:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:3.7.1
    ports:
      - 27017:27017
    command: mongod --smallfiles
    volumes:
      - ./data/mongo:/data/db:cached
    networks:
      - frontend
      - backend
    environment:
      TZ: Asia/Tokyo

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - "80:80"
      - "443:443"
    links:
      - www:www
    environment:
      DOMAINS: "${WWW_DOMAIN} -> http://www:3000"
      STAGE: "${WWW_ENV}"
      RESOLVER: "127.0.0.11 ipv6=off valid=60s"
      DYNAMIC_UPSTREAM: "true"
      WEBSOCKET: "true"
      CLIENT_MAX_BODY_SIZE: 0
      TZ: Asia/Tokyo
    volumes:
      - ./data/ssl_certs:/var/lib/https-portal:cached
    networks:
      - frontend
      - backend

  discord:
    build:
      context: ./nodejs/discord
      dockerfile: discord.Dockerfile
    volumes:
      - ./nodejs/discord:/discord:cached
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      WWW_ENV: ${WWW_ENV}
      DISCORD_ADMIN_USER_ID: ${DISCORD_ADMIN_USER_ID}
      DISCORD_BOT_CHANNEL_ID: ${DISCORD_BOT_CHANNEL_ID}
      REMOTE_DEPLOY_COMMAND: ${REMOTE_DEPLOY_COMMAND}
      DISCORD_WEBHOCK: ${DISCORD_WEBHOCK}
      IN_POM_PATH: ${IN_POM_PATH}
      OUT_POM_PATH: ${OUT_POM_PATH}
      WEBPUSH_CONTACT: ${WEBPUSH_CONTACT}
      WEBPUSH_VAPIDKEYS_PUBLIC: ${WEBPUSH_VAPIDKEYS_PUBLIC}
      WEBPUSH_VAPIDKEYS_PRIVATE: ${WEBPUSH_VAPIDKEYS_PRIVATE}
      WWW_DOMAIN: ${WWW_DOMAIN}
    links:
      - mongodb
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
